// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`when indeterminate prop is passed true 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <BlueRainCheckbox
    indeterminate={false}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
<<<<<<< HEAD
      "children": <WithStyles(FormControlLabel)
=======
      "children": <WithStyles(WithFormControlContext(FormControlLabel))
>>>>>>> abe0c27cbfbc48ff736e295ad073f2440bae9139
        control={
                <WithStyles(Checkbox)
                        checked={undefined}
                        indeterminate={false}
                        onChange={undefined}
                        value={undefined}
                />
        }
        label={undefined}
/>,
      "row": true,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "control": <WithStyles(Checkbox)
          checked={undefined}
          indeterminate={false}
          onChange={undefined}
          value={undefined}
/>,
        "label": undefined,
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
<<<<<<< HEAD
        "children": <WithStyles(FormControlLabel)
=======
        "children": <WithStyles(WithFormControlContext(FormControlLabel))
>>>>>>> abe0c27cbfbc48ff736e295ad073f2440bae9139
          control={
                    <WithStyles(Checkbox)
                              checked={undefined}
                              indeterminate={false}
                              onChange={undefined}
                              value={undefined}
                    />
          }
          label={undefined}
/>,
        "row": true,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "control": <WithStyles(Checkbox)
            checked={undefined}
            indeterminate={false}
            onChange={undefined}
            value={undefined}
/>,
          "label": undefined,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`when value prop is passed false 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <BlueRainCheckbox
    value={false}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
<<<<<<< HEAD
      "children": <WithStyles(FormControlLabel)
=======
      "children": <WithStyles(WithFormControlContext(FormControlLabel))
>>>>>>> abe0c27cbfbc48ff736e295ad073f2440bae9139
        control={
                <WithStyles(Checkbox)
                        checked={false}
                        onChange={undefined}
                        value={undefined}
                />
        }
        label={undefined}
/>,
      "row": true,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "control": <WithStyles(Checkbox)
          checked={false}
          onChange={undefined}
          value={undefined}
/>,
        "label": undefined,
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
<<<<<<< HEAD
        "children": <WithStyles(FormControlLabel)
=======
        "children": <WithStyles(WithFormControlContext(FormControlLabel))
>>>>>>> abe0c27cbfbc48ff736e295ad073f2440bae9139
          control={
                    <WithStyles(Checkbox)
                              checked={false}
                              onChange={undefined}
                              value={undefined}
                    />
          }
          label={undefined}
/>,
        "row": true,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "control": <WithStyles(Checkbox)
            checked={false}
            onChange={undefined}
            value={undefined}
/>,
          "label": undefined,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
