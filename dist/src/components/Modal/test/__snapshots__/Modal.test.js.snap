// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`render correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Modal>
    <ModalHeader>
        UserLocation Service
    </ModalHeader>
    <ModalBody>
        Let Google help apps determine location. This means sending anonymous location data to Google, even when no apps are running.
    </ModalBody>
    <ModalFooter>
        <WithStyles(Button)
            color="primary"
            onClick={[Function]}
        >
            Disagree
        </WithStyles(Button)>
        <WithStyles(Button)
            color="primary"
            onClick={[Function]}
        >
            Agree
        </WithStyles(Button)>
        <WithStyles(Button)
            color="primary"
            onClick={[Function]}
        >
            Disagree
        </WithStyles(Button)>
        <WithStyles(Button)
            color="primary"
            onClick={[Function]}
        >
            Agree
        </WithStyles(Button)>
    </ModalFooter>
</Modal>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <ModalHeader>
          UserLocation Service
</ModalHeader>,
        <ModalBody>
          Let Google help apps determine location. This means sending anonymous location data to Google, even when no apps are running.
</ModalBody>,
        <ModalFooter>
          <WithStyles(Button)
                    color="primary"
                    onClick={[Function]}
          >
                    Disagree
          </WithStyles(Button)>
          <WithStyles(Button)
                    color="primary"
                    onClick={[Function]}
          >
                    Agree
          </WithStyles(Button)>
          <WithStyles(Button)
                    color="primary"
                    onClick={[Function]}
          >
                    Disagree
          </WithStyles(Button)>
          <WithStyles(Button)
                    color="primary"
                    onClick={[Function]}
          >
                    Agree
          </WithStyles(Button)>
</ModalFooter>,
      ],
      "onClose": undefined,
      "onEscapeKeyDown": undefined,
      "open": undefined,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": "UserLocation Service",
        },
        "ref": null,
        "rendered": "UserLocation Service",
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": "Let Google help apps determine location. This means sending anonymous location data to Google, even when no apps are running.",
        },
        "ref": null,
        "rendered": "Let Google help apps determine location. This means sending anonymous location data to Google, even when no apps are running.",
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <WithStyles(Button)
              color="primary"
              onClick={[Function]}
>
              Disagree
</WithStyles(Button)>,
            <WithStyles(Button)
              color="primary"
              onClick={[Function]}
>
              Agree
</WithStyles(Button)>,
            <WithStyles(Button)
              color="primary"
              onClick={[Function]}
>
              Disagree
</WithStyles(Button)>,
            <WithStyles(Button)
              color="primary"
              onClick={[Function]}
>
              Agree
</WithStyles(Button)>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Disagree",
              "color": "primary",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "Disagree",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Agree",
              "color": "primary",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "Agree",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Disagree",
              "color": "primary",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "Disagree",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Agree",
              "color": "primary",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "Agree",
            "type": [Function],
          },
        ],
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <ModalHeader>
            UserLocation Service
</ModalHeader>,
          <ModalBody>
            Let Google help apps determine location. This means sending anonymous location data to Google, even when no apps are running.
</ModalBody>,
          <ModalFooter>
            <WithStyles(Button)
                        color="primary"
                        onClick={[Function]}
            >
                        Disagree
            </WithStyles(Button)>
            <WithStyles(Button)
                        color="primary"
                        onClick={[Function]}
            >
                        Agree
            </WithStyles(Button)>
            <WithStyles(Button)
                        color="primary"
                        onClick={[Function]}
            >
                        Disagree
            </WithStyles(Button)>
            <WithStyles(Button)
                        color="primary"
                        onClick={[Function]}
            >
                        Agree
            </WithStyles(Button)>
</ModalFooter>,
        ],
        "onClose": undefined,
        "onEscapeKeyDown": undefined,
        "open": undefined,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": "UserLocation Service",
          },
          "ref": null,
          "rendered": "UserLocation Service",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": "Let Google help apps determine location. This means sending anonymous location data to Google, even when no apps are running.",
          },
          "ref": null,
          "rendered": "Let Google help apps determine location. This means sending anonymous location data to Google, even when no apps are running.",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <WithStyles(Button)
                color="primary"
                onClick={[Function]}
>
                Disagree
</WithStyles(Button)>,
              <WithStyles(Button)
                color="primary"
                onClick={[Function]}
>
                Agree
</WithStyles(Button)>,
              <WithStyles(Button)
                color="primary"
                onClick={[Function]}
>
                Disagree
</WithStyles(Button)>,
              <WithStyles(Button)
                color="primary"
                onClick={[Function]}
>
                Agree
</WithStyles(Button)>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Disagree",
                "color": "primary",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "Disagree",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Agree",
                "color": "primary",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "Agree",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Disagree",
                "color": "primary",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "Disagree",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Agree",
                "color": "primary",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "Agree",
              "type": [Function],
            },
          ],
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`render correctly 2`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Modal>
    <ModalHeader>
        UserLocation Service
    </ModalHeader>
    <ModalBody>
        Let Google help apps determine location. This means sending anonymous location data to Google, even when no apps are running.
    </ModalBody>
    <ModalFooter>
        <WithStyles(Button)
            color="primary"
            onClick={[Function]}
        >
            Disagree
        </WithStyles(Button)>
        <WithStyles(Button)
            color="primary"
            onClick={[Function]}
        >
            Agree
        </WithStyles(Button)>
        <WithStyles(Button)
            color="primary"
            onClick={[Function]}
        >
            Disagree
        </WithStyles(Button)>
        <WithStyles(Button)
            color="primary"
            onClick={[Function]}
        >
            Agree
        </WithStyles(Button)>
    </ModalFooter>
</Modal>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <ModalHeader>
          UserLocation Service
</ModalHeader>,
        <ModalBody>
          Let Google help apps determine location. This means sending anonymous location data to Google, even when no apps are running.
</ModalBody>,
        <ModalFooter>
          <WithStyles(Button)
                    color="primary"
                    onClick={[Function]}
          >
                    Disagree
          </WithStyles(Button)>
          <WithStyles(Button)
                    color="primary"
                    onClick={[Function]}
          >
                    Agree
          </WithStyles(Button)>
          <WithStyles(Button)
                    color="primary"
                    onClick={[Function]}
          >
                    Disagree
          </WithStyles(Button)>
          <WithStyles(Button)
                    color="primary"
                    onClick={[Function]}
          >
                    Agree
          </WithStyles(Button)>
</ModalFooter>,
      ],
      "onClose": undefined,
      "onEscapeKeyDown": undefined,
      "open": undefined,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": "UserLocation Service",
        },
        "ref": null,
        "rendered": "UserLocation Service",
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": "Let Google help apps determine location. This means sending anonymous location data to Google, even when no apps are running.",
        },
        "ref": null,
        "rendered": "Let Google help apps determine location. This means sending anonymous location data to Google, even when no apps are running.",
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <WithStyles(Button)
              color="primary"
              onClick={[Function]}
>
              Disagree
</WithStyles(Button)>,
            <WithStyles(Button)
              color="primary"
              onClick={[Function]}
>
              Agree
</WithStyles(Button)>,
            <WithStyles(Button)
              color="primary"
              onClick={[Function]}
>
              Disagree
</WithStyles(Button)>,
            <WithStyles(Button)
              color="primary"
              onClick={[Function]}
>
              Agree
</WithStyles(Button)>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Disagree",
              "color": "primary",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "Disagree",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Agree",
              "color": "primary",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "Agree",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Disagree",
              "color": "primary",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "Disagree",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Agree",
              "color": "primary",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "Agree",
            "type": [Function],
          },
        ],
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <ModalHeader>
            UserLocation Service
</ModalHeader>,
          <ModalBody>
            Let Google help apps determine location. This means sending anonymous location data to Google, even when no apps are running.
</ModalBody>,
          <ModalFooter>
            <WithStyles(Button)
                        color="primary"
                        onClick={[Function]}
            >
                        Disagree
            </WithStyles(Button)>
            <WithStyles(Button)
                        color="primary"
                        onClick={[Function]}
            >
                        Agree
            </WithStyles(Button)>
            <WithStyles(Button)
                        color="primary"
                        onClick={[Function]}
            >
                        Disagree
            </WithStyles(Button)>
            <WithStyles(Button)
                        color="primary"
                        onClick={[Function]}
            >
                        Agree
            </WithStyles(Button)>
</ModalFooter>,
        ],
        "onClose": undefined,
        "onEscapeKeyDown": undefined,
        "open": undefined,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": "UserLocation Service",
          },
          "ref": null,
          "rendered": "UserLocation Service",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": "Let Google help apps determine location. This means sending anonymous location data to Google, even when no apps are running.",
          },
          "ref": null,
          "rendered": "Let Google help apps determine location. This means sending anonymous location data to Google, even when no apps are running.",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <WithStyles(Button)
                color="primary"
                onClick={[Function]}
>
                Disagree
</WithStyles(Button)>,
              <WithStyles(Button)
                color="primary"
                onClick={[Function]}
>
                Agree
</WithStyles(Button)>,
              <WithStyles(Button)
                color="primary"
                onClick={[Function]}
>
                Disagree
</WithStyles(Button)>,
              <WithStyles(Button)
                color="primary"
                onClick={[Function]}
>
                Agree
</WithStyles(Button)>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Disagree",
                "color": "primary",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "Disagree",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Agree",
                "color": "primary",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "Agree",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Disagree",
                "color": "primary",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "Disagree",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Agree",
                "color": "primary",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "Agree",
              "type": [Function],
            },
          ],
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
